language: cpp
sudo: required
dist: trusty
services:
  - docker

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "J8Y+eQD0p5YPOlhBEPFgpZzhRFjXC4phiiFtGV3JaYX34wxCsyyNhMStMqIZTBL4D9lQojfLgXODBDaqT1iSHDe1oonosnyYnGBIJElez247pjuNiSSvcAbYa9RQnwfHe8JFphQHViURbv0OfqpHHyAlHy5b8nrPYWG2xmHA5nY="

addons:
  coverity_scan:
    project:
      name: "bjorn/tiled"
      description: "A generic tile map editor"
    notification_email: bjorn@lindeijer.nl
    build_command_prepend: qmake
    build_command: make
    branch_pattern: coverity_scan

matrix:
  include:
    - os: linux
      compiler: gcc
      before_install:
        - sudo add-apt-repository --yes ppa:beineri/opt-qt562-trusty
        - sudo apt-get update -qq
        - sudo apt-get -y install qt56base binutils zlib1g-dev libqt5opengl5-dev
      script:
        - source /opt/*/bin/qt*-env.sh
        - qmake -v
        - mkdir Tiled ; cd Tiled/
        - qmake ../tiled.pro
        - make || true # make[1]: /opt/qt57/bin/lrelease: Command not found
        - rm -rf src/
        - mv bin/* . && rm -r bin/ # Workaround for https://github.com/probonopd/linuxdeployqt/issues/14
        - cd ../
        - cp LICENSE* COPYING *md Tiled/
        - cp ./tiled.desktop Tiled/
        - cp ./src/tiled/images/32x32/tiled.png Tiled/
        - wget -c "https://transfer.sh/ihv7a/linuxdeployqt-42fc34c-x86-64.appimage"
        - chmod a+x linuxdeployqt-42fc34c-x86-64.appimage
        - unset LD_LIBRARY_PATH
        - ./linuxdeployqt-42fc34c-x86-64.appimage ./Tiled/tiled -appimage -verbose=2
      deploy:
        skip_cleanup: true
        provider: script
        script: curl --upload-file $(ls Tiled*.AppImage) https://transfer.sh/Tiled.AppImage
        on:
          all_branches: true
    - os: linux
      compiler: clang
      env: QMAKESPEC=linux-clang
      before_install:
        - sudo apt-get update -qq
        - sudo apt-get install -qq qt5-default qttools5-dev-tools zlib1g-dev cppcheck xvfb
      script:
        - qmake
        - make
        - pushd tests/
        - qmake
        - make
        - for test in `find -executable -type f`; do pushd `dirname $test`; xvfb-run -a ./`basename $test`||exit 1; popd; done
        - popd
      after_script:
        - cppcheck --enable=all -q -Isrc/libtiled `git ls-files src/\*.cpp`
    - os: osx
      before_install:
        - brew update
        - brew install qt5
        - brew link qt5 --force
      script:
        - qmake
        - make
        - pushd tests/
        - qmake
        - make
        - popd

before_script:
  - qmake -version
